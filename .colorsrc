#Usage in string: ${BLUE}
colormap=(RED		GREEN		YELLOW		BLUE		BOLD		RESET		DIM		BLINK
INVERT		HIDE		MAGENTA		CYAN		LGRAY    	DGRAY    	LRED    	LGREEN
LYELLOW    	LBLUE    	LMAGENTA    	LCYAN    	WHITE    	BGDEFAULT    	BGBLACK
BGRED    	BGGREEN    	BGYELLOW    	BGBLUE    	BGMAGENTA    	BGCYAN    	BGLGRAY
BGDGRAY    	BGLRED    	BGLGREEN    	BGLYELLOW    	BGLBLUE    	BGLMAGENTA    	BGLCYAN
BGWHITE    )

if [ -t 1 ]; then
		RED=$(echo '\033[31m')
		GREEN=$(echo '\033[32m')
		YELLOW=$(echo '\033[33m')
		BLUE=$(echo '\033[34m')
		BOLD=$(echo '\033[1m')
		RESET=$(echo '\033[m')
		DIM=$(echo '\033[2m')
		BLINK=$(echo '\033[5m')
		INVERT=$(echo '\033[7m')
		HIDE=$(echo '\033[8m')
		MAGENTA=$(echo '\033[35m')
		CYAN=$(echo '\033[36m')
		LGRAY=$(echo '\033[37m')
    	DGRAY=$(echo '\033[90m')
    	LRED=$(echo '\033[91m')
    	LGREEN=$(echo '\033[92m')
    	LYELLOW=$(echo '\033[93m')
    	LBLUE=$(echo '\033[94m')
    	LMAGENTA=$(echo '\033[95m')
    	LCYAN=$(echo '\033[96m')
    	WHITE=$(echo '\033[97m')
    	BGDEFAULT=$(echo '\033[49m')
    	BGBLACK=$(echo '\033[40m')
    	BGRED=$(echo '\033[41m')
    	BGGREEN=$(echo '\033[42m')
    	BGYELLOW=$(echo '\033[43m')
    	BGBLUE=$(echo '\033[44m')
    	BGMAGENTA=$(echo '\033[45m')
    	BGCYAN=$(echo '\033[46m')
    	BGLGRAY=$(echo '\033[47m')
    	BGDGRAY=$(echo '\033[100m')
    	BGLRED=$(echo '\033[101m')
    	BGLGREEN=$(echo '\033[102m')
    	BGLYELLOW=$(echo '\033[103m')
    	BGLBLUE=$(echo '\033[104m')
    	BGLMAGENTA=$(echo '\033[105m')
    	BGLCYAN=$(echo '\033[106m')
    	BGWHITE=$(echo '\033[107m')
	else
		RED=""
		GREEN=""
		YELLOW=""
		BLUE=""
		BOLD=""
		RESET=""
		DIM=""
		BLINK=""
		INVERT=""
		HIDE=""
		MAGENTA=""
		CYAN=""
		LGRAY=""
    	DGRAY=""
    	LRED=""
    	LGREEN=""
    	LYELLOW=""
    	LBLUE=""
    	LMAGENTA=""
    	LCYAN=""
    	WHITE=""
    	BGDEFAULT=""
    	BGBLACK=""
    	BGRED=""
    	BGGREEN=""
    	BGYELLOW=""
    	BGBLUE=""
    	BGMAGENTA=""
    	BGCYAN=""
    	BGLGRAY=""
    	BGDGRAY=""
    	BGLRED=""
    	BGLGREEN=""
    	BGLYELLOW=""
    	BGLBLUE=""
    	BGLMAGENTA=""
    	BGLCYAN=""
    	BGWHITE=""
	fi
TAB='\t'
TABB='\t\t'
TABBB='\t\t\t'
NL='%s\n'

FORMAT="%s\n"

color_help()
{
    echo "How to use terminal colors:"
    echo "Call its function, which is just it's color name."
    echo "Set the \$FORMAT variable to change the printf formatting."
}

format()
{
    if [ -z $@ ]
    then
        FORMAT="%s\n"
    else
        FORMAT="$@"
    fi
}


dim() {
	printf $FORMAT ${DIM}"$@"${RESET} >&2
}
blink() {
	printf $FORMAT ${BLINK}"$@"${RESET} >&2
}
hide() {
	printf $FORMAT ${HIDE}"$@"${RESET} >&2
}
invert() {
	printf $FORMAT ${INVERT}"$@"${RESET} >&2
}


bold() {
	printf $FORMAT ${BOLD}"$@"${RESET} >&2
}

green() {
   printf $FORMAT  ${GREEN}"$@"${RESET} >&2
}

red() {
   printf $FORMAT  ${RED}"$@"${RESET} >&2
}

blue() {
   printf $FORMAT  ${BLUE}"$@"${RESET} >&2
}

yellow() {
   printf $FORMAT  ${YELLOW}"$@"${RESET} >&2
}

magenta() {
   printf $FORMAT  ${MAGENTA}"$@"${RESET} >&2
}

cyan() {
   printf $FORMAT  ${CYAN}"$@"${RESET} >&2
}

lgray() {
   printf $FORMAT  ${LGRAY}"$@"${RESET} >&2
}

dgray() {
   printf $FORMAT  ${DGRAY}"$@"${RESET} >&2
}

lred() {
   printf $FORMAT  ${LRED}"$@"${RESET} >&2
}

lgreen() {
   printf $FORMAT  ${LGREEN}"$@"${RESET} >&2
}

lyellow() {
   printf $FORMAT  ${LYELLOW}"$@"${RESET} >&2
}

lblue() {
   printf $FORMAT  ${LBLUE}"$@"${RESET} >&2
}

lmagenta() {
   printf $FORMAT  ${LMAGENTA}"$@"${RESET} >&2
}

lcyan() {
   printf $FORMAT  ${LCYAN}"$@"${RESET} >&2
}

white() {
   printf $FORMAT  ${WHITE}"$@"${RESET} >&2
}

clearbg() {
   printf $FORMAT  ${BGDEFAULT}"$@"${RESET} >&2
}

blackbg() {
   printf $FORMAT  ${BGBLACK}"$@"${RESET} >&2
}

redbg() {
   printf $FORMAT  ${BGRED}"$@"${RESET} >&2
}

greenbg() {
   printf $FORMAT  ${BGGREEN}"$@"${RESET} >&2
}

yellowbg() {
   printf $FORMAT  ${BGYELLOW}"$@"${RESET} >&2
}

bluebg() {
   printf $FORMAT  ${BGBLUE}"$@"${RESET} >&2
}

magentabg() {
   printf $FORMAT  ${BGMAGENTA}"$@"${RESET} >&2
}

cyanbg() {
   printf $FORMAT  ${BGCYAN}"$@"${RESET} >&2
}

##Do others if you want.
